name: CI

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          sudo apt-get update
          sudo apt-get install -y zip

      - name: Lint (ruff)
        run: python -m ruff check . --output-format=github

      - name: Format check (black)
        run: python -m black . -l 100 --check

      - name: Tests + coverage
        run: |
          pytest --maxfail=1 -q
          pytest --cov=web_flask --cov=core --cov-report=xml:coverage.xml -q

      - name: Upload coverage.xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      # Si el repo es público, podés quitar la línea "token:".
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Build ZIP artifact
        run: |
          STAMP=$(date +'%Y%m%d_%H%M%S')
          ZIP="build_${STAMP}.zip"
          # Empaquetar solo archivos trackeados: evita fallas si falta alguno
          git ls-files core web_flask templates static requirements.txt Procfile .pre-commit-config.yaml .editorconfig .gitattributes README.md VERSION CHANGELOG.md \
            | zip -@ "${ZIP}"
          ls -lh "${ZIP}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: asistente_web-build
          path: build_*.zip
